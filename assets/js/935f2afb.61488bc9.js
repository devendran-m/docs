"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"workflow":[{"type":"link","label":"Overview","href":"/workflow","docId":"workflow/index"},{"type":"link","label":"Block Explorers on Casper Network","href":"/workflow/block-explorer","docId":"workflow/block-explorer"},{"type":"link","label":"How to Stake your CSPR","href":"/workflow/staking","docId":"workflow/staking"},{"type":"link","label":"Ledger Setup","href":"/workflow/ledger-setup","docId":"workflow/ledger-setup"},{"type":"link","label":"Casper Signer User Guide","href":"/workflow/signer-guide","docId":"workflow/signer-guide"},{"type":"link","label":"Transferring Tokens using a Block Explorer","href":"/workflow/token-transfer","docId":"workflow/token-transfer"},{"type":"link","label":"Funding Testnet Accounts","href":"/workflow/testnet-faucet","docId":"workflow/testnet-faucet"},{"type":"link","label":"Prerequisites","href":"/workflow/setup","docId":"workflow/setup"},{"type":"link","label":"Querying the Network","href":"/workflow/querying","docId":"workflow/querying"},{"type":"link","label":"Account Hash","href":"/workflow/account-hash","docId":"workflow/account-hash"},{"type":"link","label":"Two-Party Multi-Signature Deploys","href":"/workflow/two-party-multi-sig","docId":"workflow/two-party-multi-sig"},{"type":"category","label":"Transferring Tokens","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/workflow/transfers","docId":"workflow/transfers"},{"type":"link","label":"Direct Token Transfer","href":"/workflow/transfer-workflow","docId":"workflow/transfer-workflow"},{"type":"link","label":"Transferring Tokens using a Multi-sig Deploy","href":"/workflow/deploy-transfer","docId":"workflow/deploy-transfer"},{"type":"link","label":"Verifying a Transfer","href":"/workflow/verify-transfer","docId":"workflow/verify-transfer"}]},{"type":"link","label":"Delegating with the Command-line","href":"/workflow/delegate","docId":"workflow/delegate"},{"type":"link","label":"Undelegating Tokens","href":"/workflow/undelegate","docId":"workflow/undelegate"},{"type":"category","label":"ERC-20 Sample Guide","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/workflow/erc-20-sample-guide","docId":"workflow/erc-20-sample-guide/index"},{"type":"link","label":"Setup","href":"/workflow/erc-20-sample-guide/setup","docId":"workflow/erc-20-sample-guide/setup"},{"type":"link","label":"Query the Contract Package","href":"/workflow/erc-20-sample-guide/query","docId":"workflow/erc-20-sample-guide/query"},{"type":"link","label":"Transfers","href":"/workflow/erc-20-sample-guide/transfers","docId":"workflow/erc-20-sample-guide/transfers"},{"type":"link","label":"Approvals","href":"/workflow/erc-20-sample-guide/approvals","docId":"workflow/erc-20-sample-guide/approvals"},{"type":"link","label":"Checking Final Balances","href":"/workflow/erc-20-sample-guide/final-balance","docId":"workflow/erc-20-sample-guide/final-balance"}]},{"type":"link","label":"Deploying an ERC-20 Compliant Token on Casper","href":"/workflow/erc20-token-deployment-guide","docId":"workflow/erc20-token-deployment-guide"},{"type":"link","label":"Contributing Documentation","href":"/workflow/contribute","docId":"workflow/contribute"}],"dapp-dev-guide":[{"type":"link","label":"Overview","href":"/dapp-dev-guide","docId":"dapp-dev-guide/index"},{"type":"link","label":"Why Build on Casper","href":"/dapp-dev-guide/why-build-on-casper","docId":"dapp-dev-guide/why-build-on-casper"},{"type":"link","label":"Accounts and Cryptographic Keys","href":"/dapp-dev-guide/keys","docId":"dapp-dev-guide/keys"},{"type":"link","label":"Understanding Hash Types","href":"/dapp-dev-guide/understanding-hash-types","docId":"dapp-dev-guide/understanding-hash-types"},{"type":"category","label":"Casper SDK Standard","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/dapp-dev-guide/sdkspec/introduction","docId":"dapp-dev-guide/sdkspec/introduction"},{"type":"link","label":"Transactional JSON-RPC Method","href":"/dapp-dev-guide/sdkspec/json-rpc-transactional","docId":"dapp-dev-guide/sdkspec/json-rpc-transactional"},{"type":"link","label":"Network Informational JSON-RPC Methods","href":"/dapp-dev-guide/sdkspec/json-rpc-informational","docId":"dapp-dev-guide/sdkspec/json-rpc-informational"},{"type":"link","label":"Proof of Stake JSON-RPC Methods","href":"/dapp-dev-guide/sdkspec/json-rpc-pos","docId":"dapp-dev-guide/sdkspec/json-rpc-pos"},{"type":"link","label":"Types","href":"/dapp-dev-guide/sdkspec/types_chain","docId":"dapp-dev-guide/sdkspec/types_chain"},{"type":"link","label":"CLType","href":"/dapp-dev-guide/sdkspec/types_cl","docId":"dapp-dev-guide/sdkspec/types_cl"}]},{"type":"link","label":"Listing CSPR","href":"/dapp-dev-guide/list-cspr","docId":"dapp-dev-guide/list-cspr"},{"type":"category","label":"Building dApps","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Sending Deploys to the Network","href":"/dapp-dev-guide/sending-deploys","docId":"dapp-dev-guide/sending-deploys"},{"type":"category","label":"SDK Client Libraries","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/sdk","docId":"dapp-dev-guide/sdk/index"},{"type":"link","label":"TypeScript/JavaScript SDK","href":"/dapp-dev-guide/sdk/script-sdk","docId":"dapp-dev-guide/sdk/script-sdk"},{"type":"link","label":".NET SDK","href":"/dapp-dev-guide/sdk/csharp-sdk","docId":"dapp-dev-guide/sdk/csharp-sdk"},{"type":"link","label":"Golang SDK","href":"/dapp-dev-guide/sdk/go-sdk","docId":"dapp-dev-guide/sdk/go-sdk"},{"type":"link","label":"Python SDK","href":"/dapp-dev-guide/sdk/python-sdk","docId":"dapp-dev-guide/sdk/python-sdk"}]},{"type":"link","label":"Local Network Testing","href":"/dapp-dev-guide/setup-nctl","docId":"dapp-dev-guide/setup-nctl"},{"type":"link","label":"Monitoring and Consuming Events","href":"/dapp-dev-guide/monitoring-events","docId":"dapp-dev-guide/monitoring-events"},{"type":"link","label":"Using Casper Signer","href":"/dapp-dev-guide/casper-signer","docId":"dapp-dev-guide/casper-signer"}]},{"type":"category","label":"Writing Smart Contracts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/writing-contracts","docId":"dapp-dev-guide/writing-contracts/index"},{"type":"link","label":"Getting Started with Rust","href":"/dapp-dev-guide/getting-started","docId":"dapp-dev-guide/getting-started"},{"type":"link","label":"A Basic Smart Contract in Rust","href":"/dapp-dev-guide/writing-contracts/rust","docId":"dapp-dev-guide/writing-contracts/rust"},{"type":"link","label":"AssemblyScript","href":"/dapp-dev-guide/writing-contracts/assembly-script","docId":"dapp-dev-guide/writing-contracts/assembly-script"},{"type":"link","label":"Unit Testing Contracts","href":"/dapp-dev-guide/testing","docId":"dapp-dev-guide/testing"},{"type":"link","label":"Upgrading Contracts","href":"/dapp-dev-guide/upgrading-contracts","docId":"dapp-dev-guide/upgrading-contracts"},{"type":"link","label":"Installing and Calling Contracts","href":"/dapp-dev-guide/calling-contracts","docId":"dapp-dev-guide/calling-contracts"},{"type":"link","label":"Execution Error Codes","href":"/dapp-dev-guide/execution-error-codes","docId":"dapp-dev-guide/execution-error-codes"}]},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/tutorials","docId":"dapp-dev-guide/tutorials/index"},{"type":"category","label":"CEP-47 Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"The NFT Standard on Casper (CEP-47)","href":"/dapp-dev-guide/tutorials/cep47/","docId":"dapp-dev-guide/tutorials/cep47/index"},{"type":"link","label":"Preparation","href":"/dapp-dev-guide/tutorials/cep47/prepare","docId":"dapp-dev-guide/tutorials/cep47/prepare"},{"type":"link","label":"Implementation","href":"/dapp-dev-guide/tutorials/cep47/implementation","docId":"dapp-dev-guide/tutorials/cep47/implementation"},{"type":"link","label":"Deployment","href":"/dapp-dev-guide/tutorials/cep47/deploy","docId":"dapp-dev-guide/tutorials/cep47/deploy"},{"type":"link","label":"Contract Interaction and Events","href":"/dapp-dev-guide/tutorials/cep47/contract-interaction","docId":"dapp-dev-guide/tutorials/cep47/contract-interaction"},{"type":"link","label":"Testing Framework","href":"/dapp-dev-guide/tutorials/cep47/test","docId":"dapp-dev-guide/tutorials/cep47/test"}]},{"type":"category","label":"A Counter Contract Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/counter","docId":"dapp-dev-guide/tutorials/counter/index"},{"type":"link","label":"Overview","href":"/dapp-dev-guide/tutorials/counter/overview","docId":"dapp-dev-guide/tutorials/counter/overview"},{"type":"link","label":"Important Commands","href":"/dapp-dev-guide/tutorials/counter/commands","docId":"dapp-dev-guide/tutorials/counter/commands"},{"type":"link","label":"Casper Client Setup","href":"/dapp-dev-guide/tutorials/counter/setup","docId":"dapp-dev-guide/tutorials/counter/setup"},{"type":"link","label":"Tutorial Walkthrough","href":"/dapp-dev-guide/tutorials/counter/walkthrough","docId":"dapp-dev-guide/tutorials/counter/walkthrough"}]},{"type":"link","label":"Key-Value Storage Tutorial","href":"/dapp-dev-guide/tutorials/kv-storage-tutorial","docId":"dapp-dev-guide/tutorials/kv-storage-tutorial"},{"type":"category","label":"Multi-Signature Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/multi-sig","docId":"dapp-dev-guide/tutorials/multi-sig/index"},{"type":"link","label":"Concepts","href":"/dapp-dev-guide/tutorials/multi-sig/concepts","docId":"dapp-dev-guide/tutorials/multi-sig/concepts"},{"type":"link","label":"Contract Example","href":"/dapp-dev-guide/tutorials/multi-sig/contract","docId":"dapp-dev-guide/tutorials/multi-sig/contract"},{"type":"link","label":"Client Example","href":"/dapp-dev-guide/tutorials/multi-sig/client","docId":"dapp-dev-guide/tutorials/multi-sig/client"},{"type":"link","label":"Setting up a Multi-sig Account","href":"/dapp-dev-guide/tutorials/multi-sig/example","docId":"dapp-dev-guide/tutorials/multi-sig/example"},{"type":"link","label":"Additional Scenarios","href":"/dapp-dev-guide/tutorials/multi-sig/additional","docId":"dapp-dev-guide/tutorials/multi-sig/additional"}]},{"type":"link","label":"Upgrading a Contract","href":"/dapp-dev-guide/tutorials/upgrade-contract","docId":"dapp-dev-guide/tutorials/upgrade-contract"},{"type":"link","label":"Safely Transfer Tokens to a Contract","href":"/dapp-dev-guide/tutorials/transfer-token-to-contract","docId":"dapp-dev-guide/tutorials/transfer-token-to-contract"}]}],"operators":[{"type":"link","label":"Introduction","href":"/operators","docId":"operators/index"},{"type":"link","label":"Recommended Hardware Specifications","href":"/operators/hardware","docId":"operators/hardware"},{"type":"link","label":"Basic Node Setup","href":"/operators/setup","docId":"operators/setup"},{"type":"link","label":"Setting up a Network","href":"/operators/create","docId":"operators/create"},{"type":"link","label":"Joining a Running Network","href":"/operators/joining","docId":"operators/joining"},{"type":"link","label":"Upgrading the Node","href":"/operators/upgrade","docId":"operators/upgrade"},{"type":"link","label":"Bonding","href":"/operators/bonding","docId":"operators/bonding"},{"type":"link","label":"Unbonding","href":"/operators/unbonding","docId":"operators/unbonding"}],"design":[{"type":"link","label":"Introduction","href":"/design","docId":"design/index"},{"type":"link","label":"Network Communication","href":"/design/p2p","docId":"design/p2p"},{"type":"link","label":"Global State","href":"/design/global-state","docId":"design/global-state"},{"type":"link","label":"Execution Semantics","href":"/design/execution-semantics","docId":"design/execution-semantics"},{"type":"link","label":"Accounts","href":"/design/accounts","docId":"design/accounts"},{"type":"link","label":"Block Structure","href":"/design/block-structure","docId":"design/block-structure"},{"type":"link","label":"Unforgeable Reference (URef)","href":"/design/uref","docId":"design/uref"},{"type":"link","label":"Serialization Standard","href":"/design/serialization-standard","docId":"design/serialization-standard"},{"type":"link","label":"Tokens","href":"/design/tokens","docId":"design/tokens"},{"type":"link","label":"Checksum Hex Encoding","href":"/design/checksummed-hex","docId":"design/checksummed-hex"},{"type":"link","label":"Appendix","href":"/design/appendix","docId":"design/appendix"}],"economics":[{"type":"link","label":"Overview","href":"/economics","docId":"economics/index"},{"type":"link","label":"Consensus Economics","href":"/economics/consensus","docId":"economics/consensus"},{"type":"category","label":"Runtime Economics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/runtime","docId":"economics/runtime"},{"type":"link","label":"Gas and the Casper Blockchain","href":"/economics/gas-concepts","docId":"economics/gas-concepts"}]},{"type":"link","label":"Delegation Details","href":"/economics/delegation","docId":"economics/delegation"},{"type":"link","label":"Staking Concepts","href":"/economics/concepts","docId":"economics/concepts"}],"faq":[{"type":"link","label":"Frequently Asked Questions (FAQ)","href":"/faq","docId":"faq/index"},{"type":"link","label":"FAQ - General","href":"/faq/faq-general","docId":"faq/faq-general"},{"type":"link","label":"FAQ - Enterprise","href":"/faq/faq-enterpise","docId":"faq/faq-enterpise"},{"type":"link","label":"FAQ - Developers","href":"/faq/faq-developer","docId":"faq/faq-developer"},{"type":"link","label":"FAQ - Validators","href":"/faq/faq-validator","docId":"faq/faq-validator"}],"glossary":[{"type":"link","label":"Appendix","href":"/glossary","docId":"glossary/index"},{"type":"link","label":"A","href":"/glossary/A","docId":"glossary/A"},{"type":"link","label":"B","href":"/glossary/B","docId":"glossary/B"},{"type":"link","label":"C","href":"/glossary/C","docId":"glossary/C"},{"type":"link","label":"D","href":"/glossary/D","docId":"glossary/D"},{"type":"link","label":"E","href":"/glossary/E","docId":"glossary/E"},{"type":"link","label":"F","href":"/glossary/F","docId":"glossary/F"},{"type":"link","label":"G","href":"/glossary/G","docId":"glossary/G"},{"type":"link","label":"H","href":"/glossary/H","docId":"glossary/H"},{"type":"link","label":"I","href":"/glossary/I","docId":"glossary/I"},{"type":"link","label":"J","href":"/glossary/J","docId":"glossary/J"},{"type":"link","label":"K","href":"/glossary/K","docId":"glossary/K"},{"type":"link","label":"L","href":"/glossary/L","docId":"glossary/L"},{"type":"link","label":"M","href":"/glossary/M","docId":"glossary/M"},{"type":"link","label":"N","href":"/glossary/N","docId":"glossary/N"},{"type":"link","label":"O","href":"/glossary/O","docId":"glossary/O"},{"type":"link","label":"P","href":"/glossary/P","docId":"glossary/P"},{"type":"link","label":"Q","href":"/glossary/Q","docId":"glossary/Q"},{"type":"link","label":"R","href":"/glossary/R","docId":"glossary/R"},{"type":"link","label":"S","href":"/glossary/S","docId":"glossary/S"},{"type":"link","label":"T","href":"/glossary/T","docId":"glossary/T"},{"type":"link","label":"U","href":"/glossary/U","docId":"glossary/U"},{"type":"link","label":"V","href":"/glossary/V","docId":"glossary/V"},{"type":"link","label":"W","href":"/glossary/W","docId":"glossary/W"},{"type":"link","label":"X","href":"/glossary/X","docId":"glossary/X"},{"type":"link","label":"Y","href":"/glossary/Y","docId":"glossary/Y"},{"type":"link","label":"Z","href":"/glossary/Z","docId":"glossary/Z"}],"staking":[{"type":"link","label":"Overview","href":"/staking","docId":"staking/index"},{"type":"link","label":"How to Stake your CSPR","href":"/workflow/staking","docId":"workflow/staking"},{"type":"link","label":"Delegating with the Command-line","href":"/workflow/delegate","docId":"workflow/delegate"}]},"docs":{"dapp-dev-guide/calling-contracts":{"id":"dapp-dev-guide/calling-contracts","title":"Installing and Calling Contracts","description":"The most efficient way to use blockchain is to store (install) your contract on the system and then call it. This section outlines the steps to do this.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/casper-signer":{"id":"dapp-dev-guide/casper-signer","title":"Using Casper Signer","description":"This tutorial shows you how to connect the Casper Signer wallet to your website, show the balance of the account and send a transaction.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/contract-dsl/advanced":{"id":"dapp-dev-guide/contract-dsl/advanced","title":"Advanced Optimization","description":"During advanced development, you may wish to optimize the output of the DSL for the blockchain once the base logic of your smart contract is in place. This requires digging into the actual code that the DSL generates, and here is where the cargo expand command becomes a useful tool."},"dapp-dev-guide/contract-dsl/archived/advanced":{"id":"dapp-dev-guide/contract-dsl/archived/advanced","title":"Advanced Options","description":"Once the base logic of the smart contract is in place, it\'s desirable to optimize the contract for the blockchain. This will require digging into the actual code that the DSL generates. This section will describe the steps to do this. Once the code has been expanded and then changed, make sure to remove the macros from the project configuration before saving the changes."},"dapp-dev-guide/contract-dsl/archived/getting-started":{"id":"dapp-dev-guide/contract-dsl/archived/getting-started","title":"getting-started","description":"Getting Started with the DSL"},"dapp-dev-guide/contract-dsl/archived/index":{"id":"dapp-dev-guide/contract-dsl/archived/index","title":"The Casper DSL","description":"The Casper Domain-Specific Language (DSL) for writing smart contracts is a tool to help developers more easily and quickly write human-readable code. It is a series of macros designed around object-oriented programming (OOP) principles. The macros conceal much of the repetitive boilerplate code necessary for proper contract compilation, operating much like templates seen in other object-oriented languages."},"dapp-dev-guide/contract-dsl/getting-started":{"id":"dapp-dev-guide/contract-dsl/getting-started","title":"The DSL Macros","description":"In this guide, we describe how to configure Rust smart contracts to use the Casper DSL, making it easier for developers to start writing their smart contracts."},"dapp-dev-guide/contract-dsl/index":{"id":"dapp-dev-guide/contract-dsl/index","title":"Introduction","description":"The Casper Domain-Specific Language (DSL) for writing smart contracts is a tool to help developers more easily and quickly write human-readable code. It is a series of macros designed around object-oriented programming (OOP) principles. The macros conceal much of the repetitive boilerplate code necessary for proper contract compilation, operating much like templates seen in other object-oriented languages."},"dapp-dev-guide/execution-error-codes":{"id":"dapp-dev-guide/execution-error-codes","title":"Execution Error Codes","description":"This section covers smart contract execution error codes.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/getting-started":{"id":"dapp-dev-guide/getting-started","title":"Getting Started with Rust","description":"This guide covers the basic tools you will need to set up your first Casper smart contract. You will also be able to build a sample smart contract and run a few basic tests on it on your local machine.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/index":{"id":"dapp-dev-guide/index","title":"Overview","description":"This guide is designed to support developers getting started with the development of smart contracts on the Casper blockchain in AssemblyScript or Rust. For Rust, there is a contract development kit that includes a runtime environment, reference documentation, and test framework. You can install our environment locally, create and test Smart Contracts with our Smart Contracts and Test Libraries, and use these libraries to build your own applications.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/keys":{"id":"dapp-dev-guide/keys","title":"Accounts and Cryptographic Keys","description":"The Casper blockchain uses an on-chain account-based model, uniquely identified by an AccountHash derived from a specific PublicKey.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/list-cspr":{"id":"dapp-dev-guide/list-cspr","title":"Listing CSPR","description":"This document is tailored specifically for exchanges that wish to list the Casper token (CSPR).","sidebar":"dapp-dev-guide"},"dapp-dev-guide/monitoring-events":{"id":"dapp-dev-guide/monitoring-events","title":"Monitoring and Consuming Events","description":"The Casper node streams deploy execution effects and finality signatures through an SSE server. The default configuration of the Casper node provides event streaming on the\xa0/events\xa0endpoint and the port specified as the eventstreamserver.address in the node\'s config.toml, which is by default 9999 on Testnet and Mainnet. The URLs for different types of events are:","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdk/csharp-sdk":{"id":"dapp-dev-guide/sdk/csharp-sdk","title":".NET SDK","description":"The C# .NET SDK allows developers to interact with the Casper Network using C#.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdk/go-sdk":{"id":"dapp-dev-guide/sdk/go-sdk","title":"Golang SDK","description":"Usage Examples","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdk/index":{"id":"dapp-dev-guide/sdk/index","title":"Introduction","description":"This section covers the software development kits (SDKs) available for interacting with the Casper blockchain. These SDKs are client-side libraries providing functions or methods (depending on the language) to interact with the Casper Network. You can use them as a model to develop your application and accomplish tasks such as generating account keys, sending transfers, or other blockchain transactions.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdk/python-sdk":{"id":"dapp-dev-guide/sdk/python-sdk","title":"Python SDK","description":"The Python SDK allows developers to interact with the Casper Node using Python 3.9+. This page covers various examples of using this SDK.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdk/script-sdk":{"id":"dapp-dev-guide/sdk/script-sdk","title":"TypeScript/JavaScript SDK","description":"This page contains details related to a few JavaScript (JS) clients and the Casper JS SDK.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/introduction":{"id":"dapp-dev-guide/sdkspec/introduction","title":"Introduction","description":"This document outlines the methods, endpoints, and types available to developers crafting an SDK for use with Casper networks. The separation of these methods pertains to their use and potential necessity for specific forms of SDK. While a full-featured SDK may feature all methods, there are use cases for SDKs that are purely transactional or informational.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/json-rpc-informational":{"id":"dapp-dev-guide/sdkspec/json-rpc-informational","title":"Network Informational JSON-RPC Methods","description":"network-informational}","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/json-rpc-pos":{"id":"dapp-dev-guide/sdkspec/json-rpc-pos","title":"Proof of Stake JSON-RPC Methods","description":"proof-of-stake}","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/json-rpc-transactional":{"id":"dapp-dev-guide/sdkspec/json-rpc-transactional","title":"Transactional JSON-RPC Method","description":"transactional}","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/types_chain":{"id":"dapp-dev-guide/sdkspec/types_chain","title":"Types","description":"types}","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sdkspec/types_cl":{"id":"dapp-dev-guide/sdkspec/types_cl","title":"CLType","description":"cltype}","sidebar":"dapp-dev-guide"},"dapp-dev-guide/sending-deploys":{"id":"dapp-dev-guide/sending-deploys","title":"Sending Deploys to the Network","description":"Ultimately, smart contracts are meant to run on the blockchain. You can send your contract to the network via a deploy. To do this, you will need to meet a few prerequisites:","sidebar":"dapp-dev-guide"},"dapp-dev-guide/setup-nctl":{"id":"dapp-dev-guide/setup-nctl","title":"Local Network Testing","description":"NCTL stands for network/node control. NCTL is a CLI application you can use to set up and control multiple local Casper networks during development. Many developers wish to spin up relatively small test networks to localize their testing before deploying to the blockchain. Adopting a standardized approach in the community is also helpful for troubleshooting and reporting issues.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/testing":{"id":"dapp-dev-guide/testing","title":"Unit Testing Contracts","description":"As part of the Casper local Rust contract development environment, we provide an in-memory virtual machine and a testing framework against which you can run your contract. You do not need to set up a full node for testing. We provide a testing framework that simulates deploy execution, enables monitoring global state changes using assertions, and confirms a successful deploy of the smart contract.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/cep47/contract-interaction":{"id":"dapp-dev-guide/tutorials/cep47/contract-interaction","title":"Contract Interaction and Events","description":"The NFT contract emits events. These events occur when some operation (like minting token) succeeds.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/cep47/deploy":{"id":"dapp-dev-guide/tutorials/cep47/deploy","title":"Deployment","description":"Now that you have implemented a smart contract for CEP-47, it\'s time to deploy it to the network. You will use a JavaScript client with in-built TypeScript (TS) classes to execute the contract deployment. The JS client also resides in a separate repository. Clone that repository to your machine and proceed with these deployment steps.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/cep47/implementation":{"id":"dapp-dev-guide/tutorials/cep47/implementation","title":"Implementation","description":"This section will explore a smart contract that implements the NFT standard for the Casper Network, introduced as CEP-47. Please visit GitHub for the most up-to-date implementation.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/cep47/index":{"id":"dapp-dev-guide/tutorials/cep47/index","title":"The NFT Standard on Casper (CEP-47)","description":"This tutorial takes you through the standard of implementing non-fungible tokens on the Casper Network. Before diving into the Casper NFT implementation, let\'s cover some knowledge on overall NFT design. The following sections illustrate the origin and the development of NFTs in the blockchain domain.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/cep47/prepare":{"id":"dapp-dev-guide/tutorials/cep47/prepare","title":"Preparation","description":"First clone the contract from GitHub:","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/cep47/test":{"id":"dapp-dev-guide/tutorials/cep47/test","title":"Testing Framework","description":"Coming soon!","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter/commands":{"id":"dapp-dev-guide/tutorials/counter/commands","title":"Important Commands","description":"Faucet Account Information","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter/index":{"id":"dapp-dev-guide/tutorials/counter/index","title":"Introduction","description":"In this tutorial, we introduce an application on the chain -- the counter contract. This tutorial is a straightforward contract that maintains a counter variable. The goal is to introduce you to the process of deploying and using a contract on Testnet, the test network. Once you are familiar with this process, the next step will be to write your smart contracts.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter/overview":{"id":"dapp-dev-guide/tutorials/counter/overview","title":"Overview","description":"This flowchart outlines the process we will go through in this tutorial. Since there are quite a few things taking place, you must keep in mind the overall flow as you proceed through the tutorial on your own.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter/setup":{"id":"dapp-dev-guide/tutorials/counter/setup","title":"Casper Client Setup","description":"Prerequisites","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/counter/walkthrough":{"id":"dapp-dev-guide/tutorials/counter/walkthrough","title":"Tutorial Walkthrough","description":"Now that we are familiar with the basic commands, we can begin the tutorial to deploy a contract application and use it on the network.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/index":{"id":"dapp-dev-guide/tutorials/index","title":"Introduction","description":"The following tutorials present several Casper features in depth:","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/kv-storage-tutorial":{"id":"dapp-dev-guide/tutorials/kv-storage-tutorial","title":"Key-Value Storage Tutorial","description":"This tutorial covers a simple contract, which creates a key that stores a CLType value. This example will show you how to store a U64, string, account hash, or U512 value.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/multi-sig/additional":{"id":"dapp-dev-guide/tutorials/multi-sig/additional","title":"Additional Scenarios","description":"This section walks you through additional scenarios where accounts have multiple associated keys for signing transactions at various thresholds.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/multi-sig/client":{"id":"dapp-dev-guide/tutorials/multi-sig/client","title":"Client Example","description":"This section covers an example client that invokes a smart contract for key management. In addition to the main account, the client code will add two additional associated accounts to perform deployments. These associated accounts will perform deployments but will not be able to add another account.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/multi-sig/concepts":{"id":"dapp-dev-guide/tutorials/multi-sig/concepts","title":"Concepts","description":"The Casper implementation of multiple signatures is unique and allows you to set up and customize access to your account and deployments.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/multi-sig/contract":{"id":"dapp-dev-guide/tutorials/multi-sig/contract","title":"Contract Example","description":"This section covers an example smart contract used for key management.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/multi-sig/example":{"id":"dapp-dev-guide/tutorials/multi-sig/example","title":"Setting up a Multi-sig Account","description":"In this section, we will explore the commands to setup an account with associated keys and restrict access for deployment and key management to specific keys within the account.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/multi-sig/index":{"id":"dapp-dev-guide/tutorials/multi-sig/index","title":"Introduction","description":"In this tutorial, you will learn to use Casper\'s permissions model to sign transactions with multiple keys. The code for this tutorial is available in GitHub. The sample code creates a smart contract and a sample client that invokes the multi-signature feature on a local Casper network.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/transfer-token-to-contract":{"id":"dapp-dev-guide/tutorials/transfer-token-to-contract","title":"Safely Transfer Tokens to a Contract","description":"This tutorial covers two methods to handle tokens via a contract. This is not a native process to the Casper Network and will require the use of custom code. The following two scenarios provide a framework for developers and the pros and cons of each example. Developers should choose the option that best suits their individual needs.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/tutorials/upgrade-contract":{"id":"dapp-dev-guide/tutorials/upgrade-contract","title":"Upgrading a Contract","description":"This tutorial examines how to upgrade an existing contract, a process similar to upgrading any other software. You can change an unlocked contract package by adding a new contract and updating the default contract version that the contract package should use. You will need to know the contract package hash and use the addcontractversion API.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/understanding-hash-types":{"id":"dapp-dev-guide/understanding-hash-types","title":"Understanding Hash Types","description":"For the sake of user convenience and compatibility, we expect the delivery of hashes and similar data in the form of a prefixed string when using the node. The following is a list of string representations used.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/upgrading-contracts":{"id":"dapp-dev-guide/upgrading-contracts","title":"Upgrading Contracts","description":"Our smart contract packaging tools enable you to:","sidebar":"dapp-dev-guide"},"dapp-dev-guide/why-build-on-casper":{"id":"dapp-dev-guide/why-build-on-casper","title":"Why Build on Casper","description":"This guide intends to briefly show you the current features and advantages of building on the Casper Network.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/assembly-script":{"id":"dapp-dev-guide/writing-contracts/assembly-script","title":"AssemblyScript","description":"CasperLabs maintains the casper-contract to allow developers to create smart contracts using AssemblyScript. The package source is hosted in the main Casper Network repository.","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/index":{"id":"dapp-dev-guide/writing-contracts/index","title":"Introduction","description":"This section shows you how to write smart contracts in Rust and WebAssembly (Wasm).","sidebar":"dapp-dev-guide"},"dapp-dev-guide/writing-contracts/rust":{"id":"dapp-dev-guide/writing-contracts/rust","title":"A Basic Smart Contract in Rust","description":"This section explains step by step how to write a new smart contract on Casper. Start with main.rs from the previous section.","sidebar":"dapp-dev-guide"},"design/accounts":{"id":"design/accounts","title":"Accounts","description":"accounts-head}","sidebar":"design"},"design/appendix":{"id":"design/appendix","title":"Appendix","description":"appendix-head}","sidebar":"design"},"design/block-structure":{"id":"design/block-structure","title":"Block Structure","description":"block-structure-head}","sidebar":"design"},"design/checksummed-hex":{"id":"design/checksummed-hex","title":"Checksum Hex Encoding","description":"Introduction","sidebar":"design"},"design/execution-semantics":{"id":"design/execution-semantics","title":"Execution Semantics","description":"execution-semantics-head}","sidebar":"design"},"design/global-state":{"id":"design/global-state","title":"Global State","description":"global-state-head}","sidebar":"design"},"design/index":{"id":"design/index","title":"Introduction","description":"-   Network Communication","sidebar":"design"},"design/p2p":{"id":"design/p2p","title":"Network Communication","description":"communications-head}","sidebar":"design"},"design/serialization-standard":{"id":"design/serialization-standard","title":"Serialization Standard","description":"serialization-standard-head}","sidebar":"design"},"design/tokens":{"id":"design/tokens","title":"Tokens","description":"tokens-head}","sidebar":"design"},"design/uref":{"id":"design/uref","title":"Unforgeable Reference (URef)","description":"uref-head}","sidebar":"design"},"disclaimer":{"id":"disclaimer","title":"disclaimer","description":"Disclaimer"},"economics/concepts":{"id":"economics/concepts","title":"Staking Concepts","description":"The Casper network is a Proof-of-Stake blockchain that allows validators to stake the Casper native token CSPR on the network. Validators receive CSPR as an incentive for continuing to maintain and secure the network. CSPR rewards are distributed as blocks are validated into existence and organized into eras.","sidebar":"economics"},"economics/consensus":{"id":"economics/consensus","title":"Consensus Economics","description":"Highway consensus is a continuous, trust-less process where a fixed set of validators engage in scheduled communication to advance the linear chain of finalized blocks, representing the history of changes to the global state of the blockchain. The fixed set of validators may change at each era boundary. The economics of this layer revolve around validator selection and incentivization of participation according to the schedule.","sidebar":"economics"},"economics/delegation":{"id":"economics/delegation","title":"Delegation Details","description":"This section provides a detailed explanation of the delegation cost mechanism, how the gas cost relates with delegations, where to find the details etc. Please note that the cost amounts are likely to change with time and you may have to check the latest release details to get the most up-to-date and accurate details.","sidebar":"economics"},"economics/gas-concepts":{"id":"economics/gas-concepts","title":"Gas and the Casper Blockchain","description":"What is gas?","sidebar":"economics"},"economics/index":{"id":"economics/index","title":"Overview","description":"This page presents an overview of the Casper economics.","sidebar":"economics"},"economics/runtime":{"id":"economics/runtime","title":"Introduction","description":"The economics of the runtime layer should incentivize efficient allocation of computational resources, primarily CPU time, to users. Pending state pruning implementation, disk space use is treated as CPU time usage and charged, irreversibly, per byte written. Currently, gas is allocated according to a first-in, first-out model for deploys, with a fixed price of 1 mote (1/109 part of a CSPR token) per 1 unit of gas.","sidebar":"economics"},"faq/faq-developer":{"id":"faq/faq-developer","title":"FAQ - Developers","description":"This section covers frequently asked questions and our recommendations from the developer\'s perspective.","sidebar":"faq"},"faq/faq-enterpise":{"id":"faq/faq-enterpise","title":"FAQ - Enterprise","description":"Frequently asked questions regarding the Casper Network, CasperLabs, and the CSPR token sale.","sidebar":"faq"},"faq/faq-general":{"id":"faq/faq-general","title":"FAQ - General","description":"Accounts","sidebar":"faq"},"faq/faq-validator":{"id":"faq/faq-validator","title":"FAQ - Validators","description":"Node Operations","sidebar":"faq"},"faq/index":{"id":"faq/index","title":"Frequently Asked Questions (FAQ)","description":"This page consolidates several frequently asked questions (FAQ) and organizes them into specific categories with links to access the full content of those FAQ sections.","sidebar":"faq"},"glossary/A":{"id":"glossary/A","title":"A","description":"---","sidebar":"glossary"},"glossary/B":{"id":"glossary/B","title":"B","description":"---","sidebar":"glossary"},"glossary/C":{"id":"glossary/C","title":"C","description":"---","sidebar":"glossary"},"glossary/D":{"id":"glossary/D","title":"D","description":"---","sidebar":"glossary"},"glossary/E":{"id":"glossary/E","title":"E","description":"---","sidebar":"glossary"},"glossary/F":{"id":"glossary/F","title":"F","description":"---","sidebar":"glossary"},"glossary/G":{"id":"glossary/G","title":"G","description":"---","sidebar":"glossary"},"glossary/H":{"id":"glossary/H","title":"H","description":"---","sidebar":"glossary"},"glossary/I":{"id":"glossary/I","title":"I","description":"---","sidebar":"glossary"},"glossary/index":{"id":"glossary/index","title":"Appendix","description":"These definitions are correct in the context of the CasperLabs. They may (and probably will) have slightly different semantics in other contexts, including other blockchain contexts.","sidebar":"glossary"},"glossary/J":{"id":"glossary/J","title":"J","description":"---","sidebar":"glossary"},"glossary/K":{"id":"glossary/K","title":"K","description":"---","sidebar":"glossary"},"glossary/L":{"id":"glossary/L","title":"L","description":"---","sidebar":"glossary"},"glossary/M":{"id":"glossary/M","title":"M","description":"---","sidebar":"glossary"},"glossary/N":{"id":"glossary/N","title":"N","description":"---","sidebar":"glossary"},"glossary/O":{"id":"glossary/O","title":"O","description":"---","sidebar":"glossary"},"glossary/P":{"id":"glossary/P","title":"P","description":"---","sidebar":"glossary"},"glossary/Q":{"id":"glossary/Q","title":"Q","description":"---","sidebar":"glossary"},"glossary/R":{"id":"glossary/R","title":"R","description":"---","sidebar":"glossary"},"glossary/S":{"id":"glossary/S","title":"S","description":"---","sidebar":"glossary"},"glossary/T":{"id":"glossary/T","title":"T","description":"---","sidebar":"glossary"},"glossary/U":{"id":"glossary/U","title":"U","description":"---","sidebar":"glossary"},"glossary/V":{"id":"glossary/V","title":"V","description":"---","sidebar":"glossary"},"glossary/W":{"id":"glossary/W","title":"W","description":"---","sidebar":"glossary"},"glossary/X":{"id":"glossary/X","title":"X","description":"---","sidebar":"glossary"},"glossary/Y":{"id":"glossary/Y","title":"Y","description":"---","sidebar":"glossary"},"glossary/Z":{"id":"glossary/Z","title":"Z","description":"---","sidebar":"glossary"},"operators/bonding":{"id":"operators/bonding","title":"Bonding","description":"It is recommended that a bonding request be sent once the node has completed the synchronization process. Bonding in Casper takes place through the auction contract via the add_bid.wasm contract. The auction runs for a future era, every era. The chainspec.toml specifies the number of slots available, and the auction will take the top N slots and create the validator set for the future era. In the testnet, era durations are approximately two hours. The entire process takes approximately 3 eras. Therefore, the time for bid submission to inclusion in the validator set is a minimum of six hours. Bonding requests (bids) are transactions like any other. Because they are generic transactions, they are more resistant to censorship.","sidebar":"operators"},"operators/create":{"id":"operators/create","title":"Setting up a Network","description":"It is possible to create a new network or join an existing network. This page outlines the basics for creating a new network.","sidebar":"operators"},"operators/hardware":{"id":"operators/hardware","title":"Recommended Hardware Specifications","description":"System Requirements","sidebar":"operators"},"operators/index":{"id":"operators/index","title":"Introduction","description":"Operators who wish to run node infrastructure on the Casper network, either as a standalone private network, or as part of the public network should explore this guide.","sidebar":"operators"},"operators/joining":{"id":"operators/joining","title":"Joining a Running Network","description":"The Casper network is permissionless, enabling new validators to join the network and provide additional security to the system. This page outlines the sequence of recommended steps to spin up a validating node and join an existing network.","sidebar":"operators"},"operators/setup":{"id":"operators/setup","title":"Basic Node Setup","description":"A node is normally run by executing the casper-node-launcher. This app executes the casper-node as a child process and handles upgrades of it.","sidebar":"operators"},"operators/unbonding":{"id":"operators/unbonding","title":"Unbonding","description":"Once a bid is placed, it will remain in the state of the auction contract. Even if the bid does not win a slot right away. The reason for this is that new slots may become available if bonded validators leave the network, or reduce their bond amounts. Therefore, a bid must be explicitly withdrawn in order to remove the bid from the auction. Bonded validators also have a bid in the auction, to unbond stake, this bid must be reduced. Since tokens will be transferred out of the bid purse, it\'s important to compile the contract to withdraw the bid yourself, so there is confidence in the correctness of the contract. The process is essentially the same as bonding, but uses a different contract, withdraw_bid.wasm.","sidebar":"operators"},"operators/upgrade":{"id":"operators/upgrade","title":"Upgrading the Node","description":"The chainspec.toml contains a section to indicate from which era the given casper-node version should start running.","sidebar":"operators"},"staking/index":{"id":"staking/index","title":"Overview","description":"A feature of Proof-of-Stake protocols is that token holders can actively participate in the protocol through a mechanism known as staking.","sidebar":"staking"},"welcome":{"id":"welcome","title":"Welcome","description":"This article provides an overview of the Casper project."},"workflow/account-hash":{"id":"workflow/account-hash","title":"Account Hash","description":"The account-hash is a 32-byte hash of the public key and it represents the address of the user account. It is the identifier of the account inside a smart contract.","sidebar":"workflow"},"workflow/block-explorer":{"id":"workflow/block-explorer","title":"Block Explorers on Casper Network","description":"The Casper blockchain is available as the Mainnet and Testnet. The Mainnet is the Casper blockchain that utilizes Casper tokens (CSPR). The Testnet is an alternate Casper blockchain used to test applications without spending CSPR tokens on the Casper Mainnet. You can use block explorers such as cspr.live and casperstats.io to explore the Casper blockchain.","sidebar":"workflow"},"workflow/contribute":{"id":"workflow/contribute","title":"Contributing Documentation","description":"This is the Writing Style Guide used by Casper\'s documentation team.","sidebar":"workflow"},"workflow/delegate":{"id":"workflow/delegate","title":"Delegating with the Command-line","description":"This document details a workflow where an account holder on the Casper Network can delegate their tokens to a validator on a Casper Network.","sidebar":"staking"},"workflow/deploy-transfer":{"id":"workflow/deploy-transfer","title":"Transferring Tokens using a Multi-sig Deploy","description":"This topic explores the use of a deploy file to transfer Casper tokens (CSPR) between accounts on the Casper Network. This method of transferring tokens is useful when you want to implement multi-signature deploys. To understand more about multi-signature deploys, see Two-Party Multi-Signature Deploys. The make-transfer command allows you to create a transfer deploy and save the output to a file. You can then have the deploy signed by other parties using the sign-deploy command and send it to the network for execution using the send-deploy command.","sidebar":"workflow"},"workflow/erc-20-sample-guide/approvals":{"id":"workflow/erc-20-sample-guide/approvals","title":"Approvals","description":"Transfer 10 Tokens from an Allowance of only 5","sidebar":"workflow"},"workflow/erc-20-sample-guide/final-balance":{"id":"workflow/erc-20-sample-guide/final-balance","title":"Checking Final Balances","description":"In this section, we check the final balance for all users.","sidebar":"workflow"},"workflow/erc-20-sample-guide/index":{"id":"workflow/erc-20-sample-guide/index","title":"Introduction","description":"This guide introduces you to using an ERC-20 contract on the Casper Network.","sidebar":"workflow"},"workflow/erc-20-sample-guide/query":{"id":"workflow/erc-20-sample-guide/query","title":"Query the Contract Package","description":"Query the contract package hash which returns the package:","sidebar":"workflow"},"workflow/erc-20-sample-guide/setup":{"id":"workflow/erc-20-sample-guide/setup","title":"Setup","description":"Clone the ERC-20 contract repository and run the make build-contract command. This will create the erc20token.wasm and the erc20testcall.wasm. The token WASM is the main contract. We will use the testcall contract wasm to query the balances and allowances of the ERC-20 token balances throughout this workflow.","sidebar":"workflow"},"workflow/erc-20-sample-guide/transfers":{"id":"workflow/erc-20-sample-guide/transfers","title":"Transfers","description":"Transfer 50 ERC-20 Tokens from A to B","sidebar":"workflow"},"workflow/erc20-token-deployment-guide":{"id":"workflow/erc20-token-deployment-guide","title":"Deploying an ERC-20 Compliant Token on Casper","description":"On the Casper Network, it is possible to create smart contracts that emulate ERC-20 tokens on Ethereum. These tokens have all of the capabilities of traditional ERC-20 tokens, allowing one to approve, transfer, inquire the balance of, etc. By following this guide, you\'ll be able to create your own ERC-20 token and deploy it to the Casper Network.","sidebar":"workflow"},"workflow/index":{"id":"workflow/index","title":"Overview","description":"User Guides","sidebar":"workflow"},"workflow/ledger-setup":{"id":"workflow/ledger-setup","title":"Ledger Setup","description":"A Ledger Device is a hardware wallet that is considered one of the most secure ways to store your digital assets. Ledger uses an offline, or cold storage, method of generating private keys, making it a preferred method for many crypto users. This guide will help you to connect your Ledger device to a Casper Web wallet on a block explorer such as cspr.live. The Casper Web wallet enables you to send and receive CSPR tokens.","sidebar":"workflow"},"workflow/querying":{"id":"workflow/querying","title":"Querying the Network","description":"The Casper node supports queries for users and developers to obtain information stored on the blockchain.","sidebar":"workflow"},"workflow/setup":{"id":"workflow/setup","title":"Prerequisites","description":"This section explains how to fulfill the prerequisites needed to interact with a Casper Network.","sidebar":"workflow"},"workflow/signer-guide":{"id":"workflow/signer-guide","title":"Casper Signer User Guide","description":"1. Introduction","sidebar":"workflow"},"workflow/staking":{"id":"workflow/staking","title":"How to Stake your CSPR","description":"1. Introduction","sidebar":"staking"},"workflow/testnet-faucet":{"id":"workflow/testnet-faucet","title":"Funding Testnet Accounts","description":"The Casper Testnet is an alternate Casper blockchain aimed at testing applications running on the Casper Network without spending CSPR tokens on the Casper Mainnet. Testnet tokens are independent and separate from the actual Casper Token (CSPR). While test tokens do not have any monetary value, they possess the same functionality as the CSPR token within the confines of the Testnet. The Testnet is deployed independently from the Casper Mainnet for users to experiment with Casper Network features such as transferring, delegating, and undelegating tokens. You can access the Casper Testnet using https://testnet.cspr.live/.","sidebar":"workflow"},"workflow/token-transfer":{"id":"workflow/token-transfer","title":"Transferring Tokens using a Block Explorer","description":"You can transfer Casper tokens (CSPR) using any block explorer built to explore the Casper blockchain. The Wallet feature on these block explorers can be used to transfer tokens to another user, delegate stake, or undelegate stake. In this section, we will discuss the steps to transfer CSPR tokens.","sidebar":"workflow"},"workflow/transfer-workflow":{"id":"workflow/transfer-workflow","title":"Direct Token Transfer","description":"This workflow describes how to use the Casper command-line client to transfer tokens between accounts on the Casper Network.","sidebar":"workflow"},"workflow/transfers":{"id":"workflow/transfers","title":"Introduction","description":"The following topics describe how to use the Casper command-line client to transfer tokens between accounts on the Casper Network. Depending on the type of accounts, you can choose a direct transfer or a multiple signature (multi-sig) deploy transfer.","sidebar":"workflow"},"workflow/two-party-multi-sig":{"id":"workflow/two-party-multi-sig","title":"Two-Party Multi-Signature Deploys","description":"Accounts on a Casper Network can associate other accounts to allow or require a multiple signature scheme for deploys.","sidebar":"workflow"},"workflow/undelegate":{"id":"workflow/undelegate","title":"Undelegating Tokens","description":"This document details a workflow where tokens delegated to a validator on a Casper network can be undelegated.","sidebar":"workflow"},"workflow/verify-transfer":{"id":"workflow/verify-transfer","title":"Verifying a Transfer","description":"Prerequisite","sidebar":"workflow"}}}')}}]);