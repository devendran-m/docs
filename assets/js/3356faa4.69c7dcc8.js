"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4396],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),i=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=i(r),m=a,f=d["".concat(u,".").concat(m)]||d[m]||s[m]||o;return r?n.createElement(f,p(p({ref:t},l),{},{components:r})):n.createElement(f,p({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,p[1]=c;for(var i=2;i<o;i++)p[i]=r[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3334:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return c},metadata:function(){return i},toc:function(){return s}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),p=["components"],c={},u="Preparation",i={unversionedId:"dapp-dev-guide/tutorials/cep47/prepare",id:"dapp-dev-guide/tutorials/cep47/prepare",title:"Preparation",description:"First clone the contract from GitHub:",source:"@site/source/docs/casper/dapp-dev-guide/tutorials/cep47/prepare.md",sourceDirName:"dapp-dev-guide/tutorials/cep47",slug:"/dapp-dev-guide/tutorials/cep47/prepare",permalink:"/dapp-dev-guide/tutorials/cep47/prepare",editUrl:"https://github.com/casper-network/docs/tree/main/source/docs/casper/dapp-dev-guide/tutorials/cep47/prepare.md",tags:[],version:"current",frontMatter:{},sidebar:"dapp-dev-guide",previous:{title:"The NFT Standard on Casper (CEP-47)",permalink:"/dapp-dev-guide/tutorials/cep47/"},next:{title:"Implementation",permalink:"/dapp-dev-guide/tutorials/cep47/implementation"}},l={},s=[],d={toc:s};function m(e){var t=e.components,r=(0,a.Z)(e,p);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"preparation"},"Preparation"),(0,o.kt)("p",null,"First clone the contract from GitHub:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/casper-ecosystem/casper-nft-cep47.git\n")),(0,o.kt)("p",null,"Then, move to cloned folder and prepare your environment with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd casper-nft-cep47\nmake prepare\n")),(0,o.kt)("p",null,"If your environment is set up correctly, you will see this output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rustup target add wasm32-unknown-unknown\ninfo: component 'rust-std' for target 'wasm32-unknown-unknown' is up to date\n")),(0,o.kt)("p",null,"If you do not see this message, check the ",(0,o.kt)("a",{parentName:"p",href:"/dapp-dev-guide/getting-started"},"getting started guide"),"."),(0,o.kt)("p",null,"Next, compile your contract and run the contract unit tests."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make build-contract\nmake test\n")))}m.isMDXComponent=!0}}]);